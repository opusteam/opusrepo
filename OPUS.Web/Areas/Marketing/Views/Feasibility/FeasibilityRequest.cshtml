@model OPUS.Domain.FeasibilityViewModel

@section Scripts{
    <script type="text/javascript" src="~/Scripts/Feasibility.js"></script>
}


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Feasibility Request";
}

<h2>@ViewBag.Title</h2>

@if (TempData["Message"] != null)
{ <div style="color:#00a525;font-weight:bold;">@TempData["Message"]</div>}

@*@if (TempData["Error"] != null)
    { <div style="color:#ff6a00;font-weight:bold;">@TempData["Error"]</div>}*@

@using (Html.BeginForm("FeasibilityRequest", "Feasibility", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", @id = "frmFeasibility" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary()


    <div class="form-group">
        @Html.LabelFor(model => model.FeasiblityType, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EnumDropDownListFor(model => model.FeasiblityType, "--Select--", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientId, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @*@Html.TextBoxFor(model => model.ClientId, new { @class = "form-control", @placeholder = "Client Id" }) @Html.ValidationMessageFor(model => model.ClientId)*@
            @Html.DropDownListFor(model => model.ClientId, (IEnumerable<SelectListItem>)ViewBag.clientList, "--Select--", new { @class = "form-control", @placeholder = "Client Id" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Requestfor, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EnumDropDownListFor(model => model.Requestfor, "--Select--", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConnectivityType, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EnumDropDownListFor(model => model.ConnectivityType, "--Select--", new { @class = "form-control" })
        </div>
    </div>
    <div id="clientConnLocation" class="form-group">
        <div class="col-md-12">
            <label class="col-md-2 control-label">Connectivity Location</label>
            <fieldset id="clientlocationA" class="col-md-5">
                <legend>Client Location A</legend>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.AddressOfClientLocationA, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-12">

                        @Html.TextBoxFor(model => model.AddressOfClientLocationA, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.AddressOfClientLocationA) }) @Html.ValidationMessageFor(model => model.AddressOfClientLocationA)
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LatitudeOfClientLocationA, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-5">

                        @Html.TextBoxFor(model => model.LatitudeOfClientLocationA, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.LatitudeOfClientLocationA) }) @Html.ValidationMessageFor(model => model.LatitudeOfClientLocationA)
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LongitudeOfClientLocationA, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-5">

                        @Html.TextBoxFor(model => model.LongitudeOfClientLocationA, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.LongitudeOfClientLocationA) }) @Html.ValidationMessageFor(model => model.LongitudeOfClientLocationA)
                    </div>
                </div>
            </fieldset>
            <fieldset id="clientlocationB" class="col-md-5">
                <legend>Client Location B</legend>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.AddressOfClientLocationB, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-12">

                        @Html.TextBoxFor(model => model.AddressOfClientLocationB, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.AddressOfClientLocationB) }) @Html.ValidationMessageFor(model => model.AddressOfClientLocationB)
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LatitudeOfClientLocationB, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-5">

                        @Html.TextBoxFor(model => model.LatitudeOfClientLocationB, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.LatitudeOfClientLocationB) }) @Html.ValidationMessageFor(model => model.LatitudeOfClientLocationB)
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LongitudeOfClientLocationB, new { @class = "col-md-4 control-label" })*@
                    <div class="col-md-5">

                        @Html.TextBoxFor(model => model.LongitudeOfClientLocationB, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.LongitudeOfClientLocationB) }) @Html.ValidationMessageFor(model => model.LongitudeOfClientLocationB)
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
    <section id="passiveSection" style="display:none;">
        <div class="form-group">
            @Html.LabelFor(model => model.ConnectionType, new { @class = "col-md-2 control-label" })
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model => model.ConnectionType, "--Select--", new { @class = "form-control" })
            </div>
        </div>
        
    </section>
    <section id="interfaceSection" style="display:none;">
        <div class="form-group">
            @Html.LabelFor(model => model.IsExistingInterfaceForLocationA, new { @class = "col-md-2 control-label" })
            <div class="col-md-2">
                For location A @Html.EnumDropDownListFor(model => model.IsExistingInterfaceForLocationA, "--Select--", new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                For location B @Html.EnumDropDownListFor(model => model.IsExistingInterfaceForLocationB, "--Select--", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InterfaceType, new { @class = "col-md-2 control-label" })
            <div class="row">
                <div class="col-md-2">
                    @Html.EnumDropDownListFor(model => model.InterfaceType, "--Select--", new { @class = "form-control" })
                </div>

                <div class="col-md-2">
                    @Html.EnumDropDownListFor(model => model.InterfaceTypeUnit, "--Select--", new { @class = "form-control" })
                </div>

            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.InterfaceCategory, new { @class = "col-md-2 control-label" })
            <div class="row">
                <div class="col-md-2">
                    @Html.EnumDropDownListFor(model => model.InterfaceCategory, "--Select--", new { @class = "form-control" })
                </div>
                <div class="col-md-2">
                    @Html.EnumDropDownListFor(model => model.SubcategoryOfInterfaceCategory, "--Select--", new { @class = "form-control", style = "display:none" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.ClientVLANID, new { @class = "form-control", @placeholder = "VLAN ID" })
                </div>
            </div>
        </div>
    </section>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceType, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EnumDropDownListFor(model => model.ServiceType, "--Select--", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.RequiredCapacityQuantity, new { @class = "col-md-2 control-label" })
        <div class="row">
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.RequiredCapacityQuantity, new { @class = "form-control", @placeholder = "Quantity" }) @Html.ValidationMessageFor(model => model.RequiredCapacityQuantity)
            </div>
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model => model.RequiredCapacityUnit, "--Select--", new { @class = "form-control" })
            </div>
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.RequiredCapacityUnit, new { @class = "col-md-2 control-label" })
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model=>model.RequiredCapacityUnit, new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.LastMileBy, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @*@Html.EnumDropDownListFor(model => model.LastMileBy, new { @class = "form-control" })*@
            @Html.EnumDropDownListFor(model => model.LastMileBy, "--Select--", new { @class = "form-control" })
        </div>
    </div>
    <div id="clientLocation" class="form-group col-md-12" style="display:none">
        <div class="col-md-12">
            <label class="col-md-2 control-label"></label>
            <fieldset id="clientlocationA" class="col-md-4">
                <legend>For Location A</legend>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LastMileServiceTypeOfLocationA, new { @class = "col-md-5 control-label" })*@
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.LastMileServiceTypeOfLocationA, "--Select--", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.LastMileImplementationTypeOfLocationA, new { @class = "col-md-5 control-label" })*@
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.LastMileImplementationTypeOfLocationA, "--Select--", new { @class = "form-control" })
                    </div>
                </div>
            </fieldset>
            <fieldset id="clientlocationB" class="col-md-4">
                <legend>For Location B</legend>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.LastMileServiceTypeOfLocationB, new { @class = "col-md-5 control-label" })*@
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.LastMileServiceTypeOfLocationB, "--Select--", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.LastMileImplementationTypeOfLocationB, new { @class = "col-md-5 control-label" })*@
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.LastMileImplementationTypeOfLocationB, "--Select--", new { @class = "form-control" })
                    </div>
                </div>
            </fieldset>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KAMRemarks, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.KAMRemarks, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(model => model.KAMRemarks), cols = "10", rows = "5" }) @Html.ValidationMessageFor(model => model.KAMRemarks)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" class="btn btn-primary col-md-2" value="Save" onclick="SaveFeasibilityRequest()" />
        </div>
    </div>

}